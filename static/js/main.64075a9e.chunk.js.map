{"version":3,"sources":["covid/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setdata","API_data","a","fetch","res_api","json","real_data","statewise","console","log","useEffect","id","class","active","confirmed","deaths","deltaconfirmed","recovered","state","statecode","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAgDeA,EA7CD,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAQ,uCAAG,8BAAAC,EAAA,+EAESC,MAAM,2CAFf,cAEPC,EAFO,gBAGWA,EAAQC,OAHnB,OAGPC,EAHO,OAIbN,EAAQM,EAAUC,UAAU,IAC5BC,QAAQC,IAAIH,EAAUC,UAAU,IALnB,kDASrBC,QAAQC,IAAR,MATqB,0DAAH,qDAed,OAHAC,qBAAU,WACVT,MACG,IAEP,qCAEA,oDACA,sEACA,qBAAMU,GAAG,QAAT,SACA,iDAAmB,uBAAK,yCAAxB,SAEA,qBAAKC,MAAM,SAAX,SACA,+BACA,qBAAIA,MAAM,SAAV,gCAAsC,uBAAtC,IAA4C,+BAAOb,EAAKc,YACxD,qBAAID,MAAM,UAAV,mCAA0C,uBAA1C,IAAgD,+BAAOb,EAAKe,eAC5D,qBAAIF,MAAM,QAAV,0BAA+B,uBAA/B,IAAqC,+BAAOb,EAAKgB,YACjD,qBAAIH,MAAM,QAAV,mCAAwC,uBAAxC,IAA8C,+BAAOb,EAAKiB,oBAE1D,qBAAIJ,MAAM,UAAV,6BAAoC,uBAAK,+BAAOb,EAAKkB,eACrD,qBAAIL,MAAM,QAAV,+BAAwC,uBAAK,iCAC5Cb,EAAKmB,MADuC,QAC3BnB,EAAKoB,qBAGvB,qBAAKP,MAAM,SAAX,SACA,6BACA,oDAAsB,uBAAtB,IAA4B,+BAAOb,EAAKqB,6BC/BzBC,EARH,WACV,OACE,mCACG,cAAC,EAAD,OCMQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64075a9e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './covid.css';\r\n\r\nconst Covid = () => {\r\n    const [data, setdata] = useState([])\r\n    const API_data = async() => {\r\n    try {\r\n        const res_api = await fetch(\"https://data.covid19india.org/data.json\");\r\n        const real_data = await res_api.json();\r\n        setdata(real_data.statewise[0])\r\n        console.log(real_data.statewise[0]);\r\n        } \r\n\r\n    catch (error) {\r\nconsole.log(error);\r\n}\r\n}\r\n    useEffect(() => {\r\n    API_data();\r\n    }, [])\r\n    return(\r\n<>\r\n\r\n<h1> ðŸ”´ LiVE</h1>\r\n<h2>Covid-19 Coronavirus Tracker Website</h2>\r\n< div id=\"india\">\r\n<h3>Total Cases In <br/><span>India</span> </h3>\r\n</div>\r\n<div class=\"corona\">\r\n<ul>\r\n<li class=\"active\">Total Active Cases <br/> <span>{data.active}</span></li>\r\n<li class=\"confirm\">Total confirmed Cases <br/> <span>{data.confirmed}</span></li>\r\n<li class=\"death\">Total deaths <br/> <span>{data.deaths}</span></li>\r\n<li class=\"delta\">Total Delta confirmed <br/> <span>{data.deltaconfirmed}</span>\r\n</li>\r\n<li class=\"recover\">Total Recovered <br/><span>{data.recovered}</span></li>\r\n<li class=\"state\">State &amp; StateCode <br/><span>\r\n{data.state} and {data.statecode}</span></li>\r\n</ul>\r\n</div>\r\n<div class=\"update\" >\r\n<ul>\r\n<li>Total Last Update <br/> <span>{data.lastupdatedtime}</span></li>\r\n</ul>\r\n</div>\r\n</>\r\n)\r\n}\r\nexport default Covid","import React from 'react';\nimport Covid from './covid/covid';\n\nconst App = () =>{\n  return(\n    <>\n       <Covid/>\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}